{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\photogram\\\\src\\\\components\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Button, Input, TextField } from \"@material-ui/core\";\nimport { AspectRatio, Comment, Favorite, FavoriteBorder, OpenInNew, OpenWith } from \"@material-ui/icons\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Usercontext from \"../context/user\";\nimport { findActiveUser, getAllPostComment, getAllPosts, getIndivisualPost, LikedPosts, profileUser } from \"../services/firebase\";\nimport \"./post.css\";\nimport firebase from \"firebase\"; // import { findByLabelText } from \"@testing-library/dom\";\n\nimport InputEmoji from \"react-input-emoji\";\nimport { db } from \"../firebase\";\nimport { Link } from \"react-router-dom\";\nimport { FacebookIcon, FacebookShareButton, LinkedinIcon, LinkedinShareButton, WhatsappIcon, WhatsappShareButton } from \"react-share\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport PostPopup from \"./PostPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: \"80%\",\n    height: \"90%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(0, -5, 2),\n    backgroundColor: \" rgba(255,255,255,0.9)\"\n  }\n}));\n\nconst uniqid = require(\"uniqid\");\n\nfunction Post({\n  postId,\n  uploaderId\n}) {\n  _s();\n\n  const localUrl = window.location.href;\n  const [post, setPost] = useState(null);\n  const [uploader, setUploader] = useState(null);\n  const [comment, setComment] = useState(\"\");\n  const user = useContext(Usercontext);\n  const [thisPostComments, setThisPostComments] = useState([]);\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(PostPopup, {\n      post: post,\n      postId: postId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n\n  useEffect(() => {\n    async function getMyPost() {\n      // console.log(postId);\n      const response = await getIndivisualPost(postId);\n      const postComments = await getAllPostComment(postId);\n      const uploader = await profileUser(uploaderId);\n      setUploader(uploader);\n      await response.onSnapshot(snapshot => {\n        setPost(snapshot.data());\n      });\n      await postComments.onSnapshot(snapshot => {\n        setThisPostComments(snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data()\n        })));\n      });\n    }\n\n    if (postId && uploaderId && user) {\n      getMyPost();\n    }\n  }, [postId]);\n\n  const PostComment = async e => {\n    // e.preventDefault();\n    const comments = [...thisPostComments, {\n      comment: comment,\n      commentUser: user.user.username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      commentUserUid: user.user.uid\n    }];\n    await firebase.firestore().collection(\"photos\").doc(postId).collection(\"comments\").add({\n      comment: comment,\n      commentUser: user.user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      commentUserUid: user.user.uid\n    });\n    setComment(\"\");\n  }; // console.log(postId, thisPostComments);\n\n\n  const Liked = async t => {\n    if (t) {\n      const likeditem = post.liked;\n      var index = likeditem.indexOf(user.user.uid);\n\n      if (index > -1) {\n        likeditem.splice(index, 1);\n      }\n\n      await firebase.firestore().collection(\"photos\").doc(postId).update({\n        liked: likeditem\n      });\n    } else {\n      await firebase.firestore().collection(\"photos\").doc(postId).update({\n        liked: [...post.liked, user.user.uid]\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__all\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        },\n        className: \"post__new\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_header\",\n          children: [uploader ? uploader[0].profile_photo ? /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"post_avatar\",\n            alt: \"Vishesh Kumar\",\n            src: uploader[0].profile_photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"post_avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"post_avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${post.user_uid}`,\n              style: {\n                textDecoration: \"none\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  marginRight: \"10px\"\n                },\n                children: post.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"10px\"\n              },\n              children: post.timestamp.toDate().toDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            marginRight: \"10px\"\n          },\n          to: `/image/${postId}`,\n          children: /*#__PURE__*/_jsxDEV(OpenInNew, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: \"10px\",\n          marginBottom: \"10px\",\n          fontSize: \"13px\"\n        },\n        children: [post.caption, /*#__PURE__*/_jsxDEV(\"b\", {\n          children: post.caption === \"Update my Profile Pic at\" || post.caption === \"this profile picture is updated at\" ? ` ${post.timestamp.toDate().toDateString()}` : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_header\",\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"circle\",\n        className: \"post_avatar\",\n        width: 40,\n        height: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"text\",\n        width: 50,\n        height: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), post ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"post_image\",\n      src: post.fileUrl,\n      alt: \"image of\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n      className: \"post_image\",\n      variant: \"rect\",\n      width: \"100%\",\n      height: \"300px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_bottom\",\n      children: [post && user.user && thisPostComments ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__icon\",\n            children: [post.liked.includes(user.user.uid) ? /*#__PURE__*/_jsxDEV(Favorite, {\n              style: {\n                cursor: \"pointer\",\n                color: \"red\"\n              },\n              onClick: () => Liked(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n              style: {\n                cursor: \"pointer\"\n              },\n              onClick: () => Liked(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Comment, {\n              style: {\n                marginLeft: \"10px\",\n                cursor: \"pointer\",\n                marginRight: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AspectRatio, {\n              onClick: handleOpen,\n              style: {\n                cursor: \"pointer\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"12px\",\n              color: \"gray\"\n            },\n            children: [post.liked.length, \" Likes \", thisPostComments.length, \" Comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FacebookShareButton, {\n            url: `${localUrl}image/${postId}` // quote={props.joke.setup + props.joke.punchline}\n            ,\n            hashtag: \"#StupidProgrammer\",\n            children: /*#__PURE__*/_jsxDEV(FacebookIcon, {\n              size: 25,\n              round: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(WhatsappShareButton, {\n            url: `${localUrl}image/${postId}` // quote={props.joke.setup + props.joke.punchline}\n            ,\n            hashtag: \"#StupidProgrammer\",\n            children: /*#__PURE__*/_jsxDEV(WhatsappIcon, {\n              size: 25,\n              round: true,\n              style: {\n                marginLeft: \"5px\",\n                marginRight: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LinkedinShareButton, {\n            url: `${localUrl}image/${postId}` // quote={props.joke.setup + props.joke.punchline}\n            ,\n            hashtag: \"#StupidProgrammer\",\n            children: /*#__PURE__*/_jsxDEV(LinkedinIcon, {\n              size: 25,\n              round: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this) : null, post && thisPostComments ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_comments\",\n        children: thisPostComments.slice(0, 5).map(({\n          id,\n          data\n        }) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${data.commentUserUid}`,\n              style: {\n                textDecoration: \"none\"\n              },\n              children: [data.commentUser, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: data.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"10px\",\n              color: \"gray\",\n              position: \"relative\",\n              left: \"2px\"\n            },\n            children: data.timestamp ? data.timestamp.toDate().toDateString() : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        className: \"post_comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__comments__form\",\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputEmoji, {\n          placeholder: \"React on this image\",\n          borderRadius: 10,\n          borderColor: \"white\",\n          value: comment,\n          onChange: setComment,\n          cleanOnEnter: true,\n          onEnter: PostComment,\n          maxLength: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: PostComment,\n          disabled: !postId || !user || comment.trim() === \"\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"Q6WGz+hWTs8DfDJse50q8v7BMn8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["G:/projects/photogram/src/components/Post.js"],"names":["Avatar","Button","Input","TextField","AspectRatio","Comment","Favorite","FavoriteBorder","OpenInNew","OpenWith","Skeleton","React","useState","useEffect","useContext","Usercontext","findActiveUser","getAllPostComment","getAllPosts","getIndivisualPost","LikedPosts","profileUser","firebase","InputEmoji","db","Link","FacebookIcon","FacebookShareButton","LinkedinIcon","LinkedinShareButton","WhatsappIcon","WhatsappShareButton","makeStyles","Modal","PostPopup","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","height","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","uniqid","require","Post","postId","uploaderId","localUrl","window","location","href","post","setPost","uploader","setUploader","comment","setComment","user","thisPostComments","setThisPostComments","classes","modalStyle","open","setOpen","handleOpen","handleClose","body","getMyPost","response","postComments","onSnapshot","snapshot","data","docs","map","doc","id","PostComment","e","comments","commentUser","username","timestamp","firestore","FieldValue","serverTimestamp","commentUserUid","uid","collection","add","displayName","Liked","t","likeditem","liked","index","indexOf","splice","update","display","alignItems","justifyContent","profile_photo","user_uid","textDecoration","marginRight","fontSize","toDate","toDateString","marginLeft","marginBottom","caption","fileUrl","includes","cursor","color","length","slice","trim"],"mappings":"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","sourcesContent":["import { Avatar, Button, Input, TextField } from \"@material-ui/core\";\r\nimport {\r\n  AspectRatio,\r\n  Comment,\r\n  Favorite,\r\n  FavoriteBorder,\r\n  OpenInNew,\r\n  OpenWith,\r\n} from \"@material-ui/icons\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport Usercontext from \"../context/user\";\r\nimport {\r\n  findActiveUser,\r\n  getAllPostComment,\r\n  getAllPosts,\r\n  getIndivisualPost,\r\n  LikedPosts,\r\n  profileUser,\r\n} from \"../services/firebase\";\r\nimport \"./post.css\";\r\nimport firebase from \"firebase\";\r\n// import { findByLabelText } from \"@testing-library/dom\";\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport { db } from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  WhatsappIcon,\r\n  WhatsappShareButton,\r\n} from \"react-share\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport PostPopup from \"./PostPopup\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"80%\",\r\n    height: \"90%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(0, -5, 2),\r\n    backgroundColor: \" rgba(255,255,255,0.9)\",\r\n  },\r\n}));\r\n\r\nconst uniqid = require(\"uniqid\");\r\n\r\nfunction Post({ postId, uploaderId }) {\r\n  const localUrl = window.location.href;\r\n\r\n  const [post, setPost] = useState(null);\r\n  const [uploader, setUploader] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const user = useContext(Usercontext);\r\n  const [thisPostComments, setThisPostComments] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <PostPopup post={post}  postId={postId} />\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function getMyPost() {\r\n      // console.log(postId);\r\n      const response = await getIndivisualPost(postId);\r\n      const postComments = await getAllPostComment(postId);\r\n\r\n      const uploader = await profileUser(uploaderId);\r\n      setUploader(uploader);\r\n      await response.onSnapshot((snapshot) => {\r\n        setPost(snapshot.data());\r\n      });\r\n      await postComments.onSnapshot((snapshot) => {\r\n        setThisPostComments(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n    }\r\n\r\n    if (postId && uploaderId && user) {\r\n      getMyPost();\r\n    }\r\n  }, [postId]);\r\n\r\n  const PostComment = async (e) => {\r\n    // e.preventDefault();\r\n    const comments = [\r\n      ...thisPostComments,\r\n      {\r\n        comment: comment,\r\n        commentUser: user.user.username,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        commentUserUid: user.user.uid,\r\n      },\r\n    ];\r\n\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"photos\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .add({\r\n        comment: comment,\r\n        commentUser: user.user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        commentUserUid: user.user.uid,\r\n      });\r\n\r\n    setComment(\"\");\r\n  };\r\n  // console.log(postId, thisPostComments);\r\n\r\n  const Liked = async (t) => {\r\n    if (t) {\r\n      const likeditem = post.liked;\r\n      var index = likeditem.indexOf(user.user.uid);\r\n      if (index > -1) {\r\n        likeditem.splice(index, 1);\r\n      }\r\n      await firebase.firestore().collection(\"photos\").doc(postId).update({\r\n        liked: likeditem,\r\n      });\r\n    } else {\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"photos\")\r\n        .doc(postId)\r\n        .update({\r\n          liked: [...post.liked, user.user.uid],\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      {post ? (\r\n        <div className=\"post__all\">\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            {body}\r\n          </Modal>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n            className=\"post__new\"\r\n          >\r\n            <div className=\"post_header\">\r\n              {uploader ? (\r\n                uploader[0].profile_photo ? (\r\n                  <Avatar\r\n                    className=\"post_avatar\"\r\n                    alt=\"Vishesh Kumar\"\r\n                    src={uploader[0].profile_photo}\r\n                  />\r\n                ) : (\r\n                  <Avatar className=\"post_avatar\" />\r\n                )\r\n              ) : (\r\n                <Avatar className=\"post_avatar\" />\r\n              )}\r\n              <div>\r\n                <Link\r\n                  to={`/profile/${post.user_uid}`}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <h3 style={{ marginRight: \"10px\" }}>{post.username}</h3>\r\n                </Link>\r\n                <p style={{ fontSize: \"10px\" }}>\r\n                  {post.timestamp.toDate().toDateString()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <Link style={{ marginRight: \"10px\" }} to={`/image/${postId}`}>\r\n              <OpenInNew />\r\n            </Link>\r\n          </div>\r\n          <p\r\n            style={{\r\n              marginLeft: \"10px\",\r\n              marginBottom: \"10px\",\r\n              fontSize: \"13px\",\r\n            }}\r\n          >\r\n            {/* <b>Caption : </b> */}\r\n            {post.caption}\r\n            <b>\r\n              {post.caption === \"Update my Profile Pic at\" ||\r\n              post.caption === \"this profile picture is updated at\"\r\n                ? ` ${post.timestamp.toDate().toDateString()}`\r\n                : null}\r\n            </b>\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"post_header\">\r\n          <Skeleton\r\n            variant=\"circle\"\r\n            className=\"post_avatar\"\r\n            width={40}\r\n            height={40}\r\n          />\r\n\r\n          <Skeleton variant=\"text\" width={50} height={30} />\r\n        </div>\r\n      )}\r\n      {post ? (\r\n        <img className=\"post_image\" src={post.fileUrl} alt=\"image of\" />\r\n      ) : (\r\n        <Skeleton\r\n          className=\"post_image\"\r\n          variant=\"rect\"\r\n          width=\"100%\"\r\n          height=\"300px\"\r\n        />\r\n      )}\r\n\r\n      <div className=\"post_bottom\">\r\n        {post && user.user && thisPostComments ? (\r\n          <div\r\n            style={{\r\n              padding: \"10px\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div className=\"post__icon\">\r\n                {post.liked.includes(user.user.uid) ? (\r\n                  <Favorite\r\n                    style={{ cursor: \"pointer\", color: \"red\" }}\r\n                    onClick={() => Liked(true)}\r\n                  />\r\n                ) : (\r\n                  <FavoriteBorder\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => Liked(false)}\r\n                  />\r\n                )}\r\n\r\n                <Comment\r\n                  style={{\r\n                    marginLeft: \"10px\",\r\n                    cursor: \"pointer\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                />\r\n                <AspectRatio\r\n                  onClick={handleOpen}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </div>\r\n              <p style={{ fontSize: \"12px\", color: \"gray\" }}>\r\n                {post.liked.length} Likes {thisPostComments.length} Comments\r\n              </p>\r\n            </div>\r\n            <div>\r\n              {/* share functionality */}\r\n              <FacebookShareButton\r\n                url={`${localUrl}image/${postId}`}\r\n                // quote={props.joke.setup + props.joke.punchline}\r\n                hashtag=\"#StupidProgrammer\"\r\n              >\r\n                <FacebookIcon size={25} round={true} />\r\n              </FacebookShareButton>\r\n              <WhatsappShareButton\r\n                url={`${localUrl}image/${postId}`}\r\n                // quote={props.joke.setup + props.joke.punchline}\r\n                hashtag=\"#StupidProgrammer\"\r\n              >\r\n                <WhatsappIcon\r\n                  size={25}\r\n                  round={true}\r\n                  style={{ marginLeft: \"5px\", marginRight: \"5px\" }}\r\n                />\r\n              </WhatsappShareButton>\r\n              <LinkedinShareButton\r\n                url={`${localUrl}image/${postId}`}\r\n                // quote={props.joke.setup + props.joke.punchline}\r\n                hashtag=\"#StupidProgrammer\"\r\n              >\r\n                <LinkedinIcon size={25} round={true} />\r\n              </LinkedinShareButton>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {post && thisPostComments ? (\r\n          <div className=\"post_comments\">\r\n            {thisPostComments.slice(0, 5).map(({ id, data }) => (\r\n              <p key={id}>\r\n                <strong>\r\n                  <Link\r\n                    to={`/profile/${data.commentUserUid}`}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    {data.commentUser}:\r\n                  </Link>{\" \"}\r\n                </strong>\r\n                <small>{data.comment}</small>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"10px\",\r\n                    color: \"gray\",\r\n                    position: \"relative\",\r\n                    left: \"2px\",\r\n                  }}\r\n                >\r\n                  {data.timestamp\r\n                    ? data.timestamp.toDate().toDateString()\r\n                    : null}\r\n                </span>\r\n              </p>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <Skeleton className=\"post_comments\" />\r\n        )}\r\n        <div className=\"post__comments__form\" style={{ display: \"flex\" }} >\r\n          {/* <form style={{ display: \"flex\" }} onSubmit={PostComment}> */}\r\n          {/* <input type=\"text\" style={{ width: \"100%\" }} /> */}\r\n          <InputEmoji\r\n            placeholder=\"React on this image\"\r\n            borderRadius={10}\r\n            borderColor=\"white\"\r\n            value={comment}\r\n            onChange={setComment}\r\n            cleanOnEnter\r\n            onEnter={PostComment}\r\n            maxLength={200}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={PostComment}\r\n            disabled={!postId || !user || comment.trim() === \"\"}\r\n          >\r\n            Post\r\n          </Button>\r\n          {/* </form> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}