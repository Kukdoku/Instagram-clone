{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\photogram\\\\src\\\\pages\\\\ChatWith.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport ChatHeader from \"../components/chat/ChatHeader\";\nimport ChatMessage from \"../components/chat/ChatMessage\";\nimport ChatMessageHeader from \"../components/chat/ChatMessageHeader\";\nimport ChatPerson from \"../components/chat/ChatPerson\";\nimport \"./chat.css\";\nimport chat from \"../images/chat.gif\";\nimport Usercontext from \"../context/user\";\nimport { findActiveUser, profileUser } from \"../services/firebase\";\nimport firebase from \"firebase\";\nimport { Avatar } from \"@material-ui/core\";\nimport Person from \"../components/chat/Person\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatWith() {\n  _s();\n\n  const user_uid = window.location.href.split(\"/chat/\")[1];\n  const user = useContext(Usercontext);\n  const [activeUser, setActiveUser] = useState(null);\n  const [friendUser, setFriendUser] = useState(null);\n  const [chatId, setChatId] = useState(null);\n  useEffect(() => {\n    async function getAllInformation() {\n      let currentUser = await findActiveUser(user.user.uid);\n      setActiveUser(currentUser[0]);\n\n      if (user_uid !== \"home\") {\n        let proUser = await profileUser(user_uid);\n        setFriendUser(proUser[0]);\n      } else {\n        setFriendUser(null);\n      }\n    }\n\n    if (user.user) {\n      getAllInformation();\n    }\n  }, [user_uid]);\n  return user && activeUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatHeader__left\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"chatHeader__avatar\",\n            src: activeUser.profile_photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginLeft: \"10px\",\n              color: \"#42c99c\",\n              textShadow: \"2px 2px 1px green\"\n            },\n            children: user.user.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatHeader__right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatPerson\",\n        style: {\n          overflow: \"scroll\",\n          height: \"79vh\",\n          scroll: \"hidden\"\n        },\n        children: activeUser && user ? activeUser.chat_friends.map(friend => /*#__PURE__*/_jsxDEV(Person, {\n          friend: friend\n        }, friend, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), user_uid === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__right\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#7a7258\"\n        },\n        children: [\" \", \"You are free to chat\\uD83D\\uDE80\\uD83D\\uDE04\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: chat,\n        className: \"chat_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : activeUser && friendUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__right\",\n      children: [/*#__PURE__*/_jsxDEV(ChatMessageHeader, {\n        user_uid: user_uid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {\n        user_uid: user_uid,\n        activeUser: activeUser,\n        friendUser: friendUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n      style: {\n        textAlign: \"centers\"\n      },\n      children: \"Login For access this page \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatWith, \"jk5F3ynwHiMGSNVohUu82NS2LBw=\");\n\n_c = ChatWith;\nexport default ChatWith;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatWith\");","map":{"version":3,"sources":["G:/projects/photogram/src/pages/ChatWith.js"],"names":["React","useContext","useState","useEffect","ChatHeader","ChatMessage","ChatMessageHeader","ChatPerson","chat","Usercontext","findActiveUser","profileUser","firebase","Avatar","Person","ChatWith","user_uid","window","location","href","split","user","activeUser","setActiveUser","friendUser","setFriendUser","chatId","setChatId","getAllInformation","currentUser","uid","proUser","profile_photo","marginLeft","color","textShadow","displayName","overflow","height","scroll","chat_friends","map","friend","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport ChatHeader from \"../components/chat/ChatHeader\";\r\nimport ChatMessage from \"../components/chat/ChatMessage\";\r\nimport ChatMessageHeader from \"../components/chat/ChatMessageHeader\";\r\nimport ChatPerson from \"../components/chat/ChatPerson\";\r\nimport \"./chat.css\";\r\nimport chat from \"../images/chat.gif\";\r\nimport Usercontext from \"../context/user\";\r\nimport { findActiveUser, profileUser } from \"../services/firebase\";\r\nimport firebase from \"firebase\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Person from \"../components/chat/Person\";\r\n\r\nfunction ChatWith() {\r\n  const user_uid = window.location.href.split(\"/chat/\")[1];\r\n  const user = useContext(Usercontext);\r\n  const [activeUser, setActiveUser] = useState(null);\r\n  const [friendUser, setFriendUser] = useState(null);\r\n\r\n  const [chatId, setChatId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getAllInformation() {\r\n      let currentUser = await findActiveUser(user.user.uid);\r\n      setActiveUser(currentUser[0]);\r\n      if (user_uid !== \"home\") {\r\n        let proUser = await profileUser(user_uid);\r\n        setFriendUser(proUser[0]);\r\n      } else {\r\n        setFriendUser(null);\r\n      }\r\n    }\r\n\r\n    if (user.user) {\r\n      getAllInformation();\r\n    }\r\n  }, [user_uid]);\r\n\r\n\r\n\r\n  return user && activeUser ? (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__left\">\r\n        <div className=\"chatHeader\">\r\n          <div className=\"chatHeader__left\">\r\n            <Avatar\r\n              className=\"chatHeader__avatar\"\r\n              src={activeUser.profile_photo}\r\n            />\r\n            <h4\r\n              style={{\r\n                marginLeft: \"10px\",\r\n                color: \"#42c99c\",\r\n                textShadow: \"2px 2px 1px green\",\r\n              }}\r\n            >\r\n              {user.user.displayName}\r\n            </h4>\r\n          </div>\r\n          <div className=\"chatHeader__right\"></div>\r\n        </div>\r\n        <div\r\n          className=\"chatPerson\"\r\n          style={{ overflow: \"scroll\", height: \"79vh\", scroll: \"hidden\" }}\r\n        >\r\n          {activeUser && user\r\n            ? activeUser.chat_friends.map((friend) => (\r\n                <Person friend={friend} key={friend} />\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n      {user_uid === \"home\"  ? (\r\n        <div className=\"chat__right\">\r\n          <h3 style={{ textAlign: \"center\", color: \"#7a7258\" }}>\r\n            {\" \"}\r\n            You are free to chat🚀😄\r\n          </h3>\r\n          <img src={chat} className=\"chat_image\" />\r\n        </div>\r\n      ) : activeUser && friendUser ? (\r\n        <div className=\"chat__right\">\r\n          <ChatMessageHeader user_uid={user_uid} />\r\n          <ChatMessage\r\n            user_uid={user_uid}\r\n            activeUser={activeUser}\r\n            friendUser={friendUser}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <h5 style={{ textAlign: \"centers\" }}>Login For access this page </h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWith;\r\n"]},"metadata":{},"sourceType":"module"}