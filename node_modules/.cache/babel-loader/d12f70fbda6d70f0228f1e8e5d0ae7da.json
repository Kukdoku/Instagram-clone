{"ast":null,"code":"import _toConsumableArray from\"G:/projects/photogram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"G:/projects/photogram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"G:/projects/photogram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"G:/projects/photogram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Container}from\"@material-ui/core\";import React,{useState,useEffect}from\"react\";import InputEmoji from\"react-input-emoji\";import\"./chatMessage.css\";import firebase from\"firebase\";import ChatShow from\"./ChatShow\";import{profileUser}from\"../../services/firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChatMessage(_ref){var activeUser=_ref.activeUser,friendUser=_ref.friendUser,user_uid=_ref.user_uid;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),chat=_useState4[0],setChat=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isChatFriend=_useState6[0],setIsChatFriend=_useState6[1];useEffect(function(){function getThisUserChat(_x){return _getThisUserChat.apply(this,arguments);}function _getThisUserChat(){_getThisUserChat=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(chatId){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return firebase.firestore().collection(\"chat\").doc(\"allchatCollection\").collection(chatId).orderBy('timeStamp','desc');case 2:response=_context.sent;_context.next=5;return response.onSnapshot(function(snapshot){setChat(snapshot.docs.map(function(doc){return{id:doc.id,data:doc.data()};}));});case 5:case\"end\":return _context.stop();}}},_callee);}));return _getThisUserChat.apply(this,arguments);}if(user_uid&&activeUser&&friendUser){if(activeUser.chat_friends.includes(user_uid)){getThisUserChat(activeUser.chatUrl[user_uid]);setIsChatFriend(true);}}},[user_uid,isChatFriend]);function handleOnEnter(){return _handleOnEnter.apply(this,arguments);}function _handleOnEnter(){_handleOnEnter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var chat_id,messageUrl,messageUrlOne;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!isChatFriend){_context2.next=5;break;}_context2.next=3;return firebase.firestore().collection(\"chat\").doc(\"allchatCollection\").collection(activeUser.chatUrl[user_uid]).add({message_sender:activeUser.username,message:text,timeStamp:firebase.firestore.FieldValue.serverTimestamp(),message_sender_uid:activeUser.userId,senderpic:activeUser.profile_photo});case 3:_context2.next=22;break;case 5:chat_id=activeUser.userId+friendUser.userId;messageUrl=activeUser.chatUrl;messageUrl[user_uid]=chat_id;messageUrlOne=friendUser.chatUrl;messageUrlOne[activeUser.userId]=chat_id;_context2.next=12;return firebase.firestore().collection(\"users\").doc(activeUser.docId).update({chat_friends:[].concat(_toConsumableArray(activeUser.chat_friends),[user_uid])});case 12:_context2.next=14;return firebase.firestore().collection(\"users\").doc(activeUser.docId).update({chatUrl:messageUrl});case 14:_context2.next=16;return firebase.firestore().collection(\"users\").doc(friendUser.docId).update({chat_friends:[].concat(_toConsumableArray(friendUser.chat_friends),[activeUser.userId])});case 16:_context2.next=18;return firebase.firestore().collection(\"users\").doc(friendUser.docId).update({chatUrl:messageUrlOne});case 18:_context2.next=20;return firebase.firestore().collection(\"chat\").doc(\"allchatCollection\").collection(chat_id).add({message_sender:activeUser.username,message:text,timeStamp:firebase.firestore.FieldValue.serverTimestamp(),message_sender_uid:activeUser.userId,senderpic:activeUser.profile_photo});case 20:setIsChatFriend(true);window.location.reload();case 22:case\"end\":return _context2.stop();}}},_callee2);}));return _handleOnEnter.apply(this,arguments);}return activeUser&&friendUser?/*#__PURE__*/_jsxs(\"div\",{className:\"chatMessage\",style:{overflow:'scroll',height:'70vh'},children:[chat?chat.map(function(chat){return/*#__PURE__*/_jsx(ChatShow,{chat:chat.data,activeUser:activeUser},chat.id);}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"chatMessageInput\",style:{display:\"flex\",// marginTop: \"auto\",\nposition:\"absolute\",bottom:-5,width:\"67%\",objectFit:\"contain\",backgroundColor:\"#f5f4f2\"},children:[/*#__PURE__*/_jsx(InputEmoji,{value:text,onChange:setText,cleanOnEnter:true,onEnter:handleOnEnter,placeholder:\"Type a message\"}),/*#__PURE__*/_jsxs(Button,{onClick:handleOnEnter,disabled:!text.trim(),children:[\" \",\"Send\"]})]})]}):/*#__PURE__*/_jsx(\"h5\",{children:\"Loading\"});}export default ChatMessage;","map":{"version":3,"sources":["G:/projects/photogram/src/components/chat/ChatMessage.js"],"names":["Button","Container","React","useState","useEffect","InputEmoji","firebase","ChatShow","profileUser","ChatMessage","activeUser","friendUser","user_uid","text","setText","chat","setChat","isChatFriend","setIsChatFriend","getThisUserChat","chatId","firestore","collection","doc","orderBy","response","onSnapshot","snapshot","docs","map","id","data","chat_friends","includes","chatUrl","handleOnEnter","add","message_sender","username","message","timeStamp","FieldValue","serverTimestamp","message_sender_uid","userId","senderpic","profile_photo","chat_id","messageUrl","messageUrlOne","docId","update","window","location","reload","overflow","height","display","position","bottom","width","objectFit","backgroundColor","trim"],"mappings":"qjBAAA,OAASA,MAAT,CAAiBC,SAAjB,KAAkC,mBAAlC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,WAAT,KAA4B,yBAA5B,C,wFAEA,QAASC,CAAAA,WAAT,MAA2D,IAApCC,CAAAA,UAAoC,MAApCA,UAAoC,CAAxBC,UAAwB,MAAxBA,UAAwB,CAAZC,QAAY,MAAZA,QAAY,CACzD,cAAwBT,QAAQ,CAAC,EAAD,CAAhC,wCAAOU,IAAP,eAAaC,OAAb,eACA,eAAwBX,QAAQ,CAAC,IAAD,CAAhC,yCAAOY,IAAP,eAAaC,OAAb,eACA,eAAwCb,QAAQ,CAAC,KAAD,CAAhD,yCAAOc,YAAP,eAAqBC,eAArB,eAEAd,SAAS,CAAC,UAAM,SACCe,CAAAA,eADD,yJACd,iBAA+BC,MAA/B,qJAEyBd,CAAAA,QAAQ,CAC5Be,SADoB,GAEpBC,UAFoB,CAET,MAFS,EAGpBC,GAHoB,CAGhB,mBAHgB,EAIpBD,UAJoB,CAITF,MAJS,EAIDI,OAJC,CAIO,WAJP,CAImB,MAJnB,CAFzB,QAEQC,QAFR,qCAUQA,CAAAA,QAAQ,CAACC,UAAT,CAAoB,SAACC,QAAD,CAAc,CACtCX,OAAO,CACLW,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,SAACN,GAAD,QAAU,CAC1BO,EAAE,CAAEP,GAAG,CAACO,EADkB,CAE1BC,IAAI,CAAER,GAAG,CAACQ,IAAJ,EAFoB,CAAV,EAAlB,CADK,CAAP,CAMD,CAPK,CAVR,uDADc,kDAqBd,GAAInB,QAAQ,EAAIF,UAAZ,EAA0BC,UAA9B,CAA0C,CACxC,GAAID,UAAU,CAACsB,YAAX,CAAwBC,QAAxB,CAAiCrB,QAAjC,CAAJ,CAAgD,CAC9CO,eAAe,CAACT,UAAU,CAACwB,OAAX,CAAmBtB,QAAnB,CAAD,CAAf,CACAM,eAAe,CAAC,IAAD,CAAf,CACD,CACF,CACF,CA3BQ,CA2BN,CAACN,QAAD,CAAWK,YAAX,CA3BM,CAAT,CALyD,QAkC1CkB,CAAAA,aAlC0C,iJAkCzD,iLAGMlB,YAHN,iDAIUX,CAAAA,QAAQ,CACXe,SADG,GAEHC,UAFG,CAEQ,MAFR,EAGHC,GAHG,CAGC,mBAHD,EAIHD,UAJG,CAIQZ,UAAU,CAACwB,OAAX,CAAmBtB,QAAnB,CAJR,EAMHwB,GANG,CAMC,CACHC,cAAc,CAAE3B,UAAU,CAAC4B,QADxB,CAEHC,OAAO,CAAE1B,IAFN,CAGH2B,SAAS,CAAElC,QAAQ,CAACe,SAAT,CAAmBoB,UAAnB,CAA8BC,eAA9B,EAHR,CAIHC,kBAAkB,CAAEjC,UAAU,CAACkC,MAJ5B,CAKHC,SAAS,CAAEnC,UAAU,CAACoC,aALnB,CAND,CAJV,uCAkBQC,OAlBR,CAkBkBrC,UAAU,CAACkC,MAAX,CAAoBjC,UAAU,CAACiC,MAlBjD,CAmBQI,UAnBR,CAmBqBtC,UAAU,CAACwB,OAnBhC,CAoBIc,UAAU,CAACpC,QAAD,CAAV,CAAuBmC,OAAvB,CAEIE,aAtBR,CAsBwBtC,UAAU,CAACuB,OAtBnC,CAuBIe,aAAa,CAACvC,UAAU,CAACkC,MAAZ,CAAb,CAAmCG,OAAnC,CAvBJ,wBAwBUzC,CAAAA,QAAQ,CACXe,SADG,GAEHC,UAFG,CAEQ,OAFR,EAGHC,GAHG,CAGCb,UAAU,CAACwC,KAHZ,EAIHC,MAJG,CAII,CACNnB,YAAY,8BAAMtB,UAAU,CAACsB,YAAjB,GAA+BpB,QAA/B,EADN,CAJJ,CAxBV,iCAgCUN,CAAAA,QAAQ,CACXe,SADG,GAEHC,UAFG,CAEQ,OAFR,EAGHC,GAHG,CAGCb,UAAU,CAACwC,KAHZ,EAIHC,MAJG,CAII,CACNjB,OAAO,CAAEc,UADH,CAJJ,CAhCV,iCAwCU1C,CAAAA,QAAQ,CACXe,SADG,GAEHC,UAFG,CAEQ,OAFR,EAGHC,GAHG,CAGCZ,UAAU,CAACuC,KAHZ,EAIHC,MAJG,CAII,CACNnB,YAAY,8BAAMrB,UAAU,CAACqB,YAAjB,GAA+BtB,UAAU,CAACkC,MAA1C,EADN,CAJJ,CAxCV,iCAgDUtC,CAAAA,QAAQ,CACXe,SADG,GAEHC,UAFG,CAEQ,OAFR,EAGHC,GAHG,CAGCZ,UAAU,CAACuC,KAHZ,EAIHC,MAJG,CAII,CACNjB,OAAO,CAAEe,aADH,CAJJ,CAhDV,iCAwDU3C,CAAAA,QAAQ,CACXe,SADG,GAEHC,UAFG,CAEQ,MAFR,EAGHC,GAHG,CAGC,mBAHD,EAIHD,UAJG,CAIQyB,OAJR,EAMHX,GANG,CAMC,CACHC,cAAc,CAAE3B,UAAU,CAAC4B,QADxB,CAEHC,OAAO,CAAE1B,IAFN,CAGH2B,SAAS,CAAElC,QAAQ,CAACe,SAAT,CAAmBoB,UAAnB,CAA8BC,eAA9B,EAHR,CAIHC,kBAAkB,CAAEjC,UAAU,CAACkC,MAJ5B,CAKHC,SAAS,CAAEnC,UAAU,CAACoC,aALnB,CAND,CAxDV,SAqEI5B,eAAe,CAAC,IAAD,CAAf,CACAkC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAtEJ,yDAlCyD,gDA6GzD,MAAO5C,CAAAA,UAAU,EAAIC,UAAd,cACL,aAAK,SAAS,CAAC,aAAf,CAA6B,KAAK,CAAE,CAAC4C,QAAQ,CAAC,QAAV,CAAmBC,MAAM,CAAC,MAA1B,CAApC,WACGzC,IAAI,CACDA,IAAI,CAACc,GAAL,CAAS,SAACd,IAAD,qBACP,KAAC,QAAD,EAAU,IAAI,CAAEA,IAAI,CAACgB,IAArB,CAAyC,UAAU,CAAErB,UAArD,EAAgCK,IAAI,CAACe,EAArC,CADO,EAAT,CADC,CAID,IALN,cAOE,aACE,SAAS,CAAC,kBADZ,CAEE,KAAK,CAAE,CACL2B,OAAO,CAAE,MADJ,CAEL;AACAC,QAAQ,CAAE,UAHL,CAILC,MAAM,CAAE,CAAC,CAJJ,CAKLC,KAAK,CAAE,KALF,CAMLC,SAAS,CAAE,SANN,CAOLC,eAAe,CAAE,SAPZ,CAFT,wBAYE,KAAC,UAAD,EACE,KAAK,CAAEjD,IADT,CAEE,QAAQ,CAAEC,OAFZ,CAGE,YAAY,KAHd,CAIE,OAAO,CAAEqB,aAJX,CAKE,WAAW,CAAC,gBALd,EAZF,cAmBE,MAAC,MAAD,EAAQ,OAAO,CAAEA,aAAjB,CAAgC,QAAQ,CAAE,CAACtB,IAAI,CAACkD,IAAL,EAA3C,WACG,GADH,UAnBF,GAPF,GADK,cAkCL,+BAlCF,CAoCD,CAED,cAAetD,CAAAA,WAAf","sourcesContent":["import { Button, Container } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport \"./chatMessage.css\";\r\nimport firebase from \"firebase\";\r\nimport ChatShow from \"./ChatShow\";\r\nimport { profileUser } from \"../../services/firebase\";\r\n\r\nfunction ChatMessage({ activeUser, friendUser, user_uid }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [chat, setChat] = useState(null);\r\n  const [isChatFriend, setIsChatFriend] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getThisUserChat(chatId) {\r\n      // console.log(postId);\r\n      const response = await firebase\r\n        .firestore()\r\n        .collection(\"chat\")\r\n        .doc(\"allchatCollection\")\r\n        .collection(chatId).orderBy('timeStamp','desc')\r\n\r\n   \r\n\r\n      await response.onSnapshot((snapshot) => {\r\n        setChat(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n    }\r\n\r\n    if (user_uid && activeUser && friendUser) {\r\n      if (activeUser.chat_friends.includes(user_uid)) {\r\n        getThisUserChat(activeUser.chatUrl[user_uid]);\r\n        setIsChatFriend(true);\r\n      }\r\n    }\r\n  }, [user_uid, isChatFriend]);\r\n\r\n  async function handleOnEnter() {\r\n    // console.log(text);\r\n\r\n    if (isChatFriend) {\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"chat\")\r\n        .doc(\"allchatCollection\")\r\n        .collection(activeUser.chatUrl[user_uid])\r\n\r\n        .add({\r\n          message_sender: activeUser.username,\r\n          message: text,\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          message_sender_uid: activeUser.userId,\r\n          senderpic: activeUser.profile_photo,\r\n        });\r\n    } else {\r\n      let chat_id = activeUser.userId + friendUser.userId;\r\n      let messageUrl = activeUser.chatUrl;\r\n      messageUrl[user_uid] = chat_id;\r\n\r\n      let messageUrlOne = friendUser.chatUrl;\r\n      messageUrlOne[activeUser.userId] = chat_id;\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(activeUser.docId)\r\n        .update({\r\n          chat_friends: [...activeUser.chat_friends, user_uid],\r\n        });\r\n\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(activeUser.docId)\r\n        .update({\r\n          chatUrl: messageUrl,\r\n        });\r\n\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(friendUser.docId)\r\n        .update({\r\n          chat_friends: [...friendUser.chat_friends, activeUser.userId],\r\n        });\r\n\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(friendUser.docId)\r\n        .update({\r\n          chatUrl: messageUrlOne,\r\n        });\r\n\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"chat\")\r\n        .doc(\"allchatCollection\")\r\n        .collection(chat_id)\r\n\r\n        .add({\r\n          message_sender: activeUser.username,\r\n          message: text,\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          message_sender_uid: activeUser.userId,\r\n          senderpic: activeUser.profile_photo,\r\n        });\r\n      setIsChatFriend(true);\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  \r\n  return activeUser && friendUser ? (\r\n    <div className=\"chatMessage\" style={{overflow:'scroll',height:'70vh'}}>\r\n      {chat\r\n        ? chat.map((chat) => (\r\n            <ChatShow chat={chat.data} key={chat.id} activeUser={activeUser} />\r\n          ))\r\n        : null}\r\n\r\n      <div\r\n        className=\"chatMessageInput\"\r\n        style={{\r\n          display: \"flex\",\r\n          // marginTop: \"auto\",\r\n          position: \"absolute\",\r\n          bottom: -5,\r\n          width: \"67%\",\r\n          objectFit: \"contain\",\r\n          backgroundColor: \"#f5f4f2\",\r\n        }}\r\n      >\r\n        <InputEmoji\r\n          value={text}\r\n          onChange={setText}\r\n          cleanOnEnter\r\n          onEnter={handleOnEnter}\r\n          placeholder=\"Type a message\"\r\n        />\r\n        <Button onClick={handleOnEnter} disabled={!text.trim()}>\r\n          {\" \"}\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h5>Loading</h5>\r\n  );\r\n}\r\n\r\nexport default ChatMessage;\r\n"]},"metadata":{},"sourceType":"module"}