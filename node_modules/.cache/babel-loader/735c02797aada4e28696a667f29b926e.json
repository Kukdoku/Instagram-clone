{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { auth } from \"../firebase\";\nimport firebase from \"firebase\";\n\nfunction useAuthListener() {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"authUser\")));\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged(authUser => {\n      if (authUser) {\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        localStorage.removeItem(\"authUser\");\n        setUser(null);\n      }\n    });\n    return () => listener();\n  }, [firebase]);\n  return {\n    user\n  };\n}\n\n_s(useAuthListener, \"fBLxehz0ZN+c5jvVQm4ivp/SRo4=\");\n\nexport default useAuthListener;","map":{"version":3,"sources":["G:/projects/photogram/src/hooks/use-auth-listener.js"],"names":["React","useState","useEffect","useContext","auth","firebase","useAuthListener","user","setUser","JSON","parse","localStorage","getItem","listener","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAC9BQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD8B,CAAhC;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAGR,QAAQ,CAACD,IAAT,GAAgBU,kBAAhB,CAAoCC,QAAD,IAAc;AAChE,UAAIA,QAAJ,EAAc;AACZJ,QAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAeF,QAAf,CAAjC;AACAP,QAAAA,OAAO,CAACO,QAAD,CAAP;AACD,OAHD,MAGO;AACLJ,QAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AACAV,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KARgB,CAAjB;AASA,WAAO,MAAMK,QAAQ,EAArB;AACD,GAXQ,EAWN,CAACR,QAAD,CAXM,CAAT;AAaA,SAAO;AAAEE,IAAAA;AAAF,GAAP;AACD;;GAnBQD,e;;AAqBT,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction useAuthListener() {\r\n  const [user, setUser] = useState(\r\n    JSON.parse(localStorage.getItem(\"authUser\"))\r\n  );\r\n\r\n  useEffect(() => {\r\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n        setUser(authUser);\r\n      } else {\r\n        localStorage.removeItem(\"authUser\");\r\n        setUser(null);\r\n      }\r\n    });\r\n    return () => listener();\r\n  }, [firebase]);\r\n\r\n  return { user };\r\n}\r\n\r\nexport default useAuthListener;\r\n"]},"metadata":{},"sourceType":"module"}