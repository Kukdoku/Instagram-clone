{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\photogram\\\\src\\\\components\\\\UploadPost.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Input } from \"@material-ui/core\";\nimport React, { useState, useContext } from \"react\";\nimport upload from \"../images/upload.gif\";\nimport \"./uploadPost.css\";\nimport { storage, db } from \"../firebase\";\nimport firebase from \"firebase\";\nimport Usercontext from \"../context/user\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport * as ROUTES from \"../constants/routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadPost({\n  profile_uid,\n  setShow,\n  user_uid\n}) {\n  _s();\n\n  const history = useHistory();\n  const [file, setFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState(\"\");\n  const [error, setError] = useState('');\n  const user = useContext(Usercontext); // console.log(user.user.displayName);\n\n  const UploadPost = e => {\n    e.preventDefault(); // console.log(file);\n    // console.log(caption);\n\n    let fileType = file.type.split(\"/\")[0];\n    console.log(file);\n\n    if (file.size > 10485760) {\n      setError(\"file size must be less then 10 mb\");\n    } else {\n      if (fileType === \"video\") {// const uploadTask = storage.ref(`images/${file.name}`).put(file);\n      } else if (fileType === \"image\") {// const uploadTask = storage.ref(`images/${file.name}`).put(file);\n      }\n    } // uploadTask.on(\n    //   \"state_changed\",\n    //   (snapshot) => {\n    //     const progress = Math.round(\n    //       (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n    //     );\n    //     setProgress(progress);\n    //   },\n    //   (error) => {\n    //     // console.log(error.message);\n    //     alert(error.message);\n    //   },\n    //   () => {\n    //     storage\n    //       .ref(\"images\")\n    //       .child(file.name)\n    //       .getDownloadURL()\n    //       .then((url) => {\n    //         db.collection(\"photos\").add({\n    //           timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    //           caption: caption,\n    //           username: user.user.displayName,\n    //           user_uid: user_uid,\n    //           fileUrl: url,\n    //           liked: [],\n    //         });\n    //         setCaption(\"\");\n    //         setFile(null);\n    //         setProgress(0);\n    //         setShow(\"myPosts\");\n    //         // history.push(`/profile/${uid}`);\n    //         // window.location.reload();\n    //       });\n    //   }\n    // );\n\n  };\n\n  const FileHandleChange = e => {\n    if (e.target.files[0]) {\n      setFile(e.target.files[0]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadPost\",\n    children: [progress ? /*#__PURE__*/_jsxDEV(\"progress\", {\n      id: \"file\",\n      value: progress,\n      max: \"100\",\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: upload,\n        alt: \"profile Picture\",\n        style: {\n          width: \"200px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), user.user.uid === profile_uid ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"upload__form\",\n        onSubmit: UploadPost,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          onChange: e => setCaption(e.target.value),\n          value: caption,\n          placeholder: \"Give Caption For Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: FileHandleChange,\n          accept: \".png, .jpg, .jpeg, .gif,.mov,.mp4\" // value={file}\n          ,\n          style: {\n            marginTop: \"10px\",\n            marginBottom: \"10pxf\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !file,\n          variant: \"contained\",\n          style: {\n            marginTop: '10px',\n            marginBottom: '10px'\n          },\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: \"15px\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You can not post at this profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadPost, \"X98V5pEjgx8lQRSdYVlvji0ba3I=\", false, function () {\n  return [useHistory];\n});\n\n_c = UploadPost;\nexport default UploadPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadPost\");","map":{"version":3,"sources":["G:/projects/photogram/src/components/UploadPost.js"],"names":["Button","Input","React","useState","useContext","upload","storage","db","firebase","Usercontext","Route","useHistory","ROUTES","UploadPost","profile_uid","setShow","user_uid","history","file","setFile","progress","setProgress","caption","setCaption","error","setError","user","e","preventDefault","fileType","type","split","console","log","size","FileHandleChange","target","files","width","display","uid","value","marginTop","marginBottom","color","fontSize"],"mappings":"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","sourcesContent":["import { Button, Input } from \"@material-ui/core\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport upload from \"../images/upload.gif\";\r\nimport \"./uploadPost.css\";\r\nimport { storage, db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport Usercontext from \"../context/user\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\n\r\nfunction UploadPost({ profile_uid, setShow, user_uid }) {\r\n  const history = useHistory();\r\n  const [file, setFile] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [error, setError] = useState('')\r\n  const user = useContext(Usercontext);\r\n  \r\n  // console.log(user.user.displayName);\r\n\r\n  const UploadPost = (e) => {\r\n    e.preventDefault();\r\n    // console.log(file);\r\n    // console.log(caption);\r\n   let fileType = file.type.split(\"/\")[0]\r\n\r\n    console.log(file)\r\n    if (file.size > 10485760) {\r\n      setError(\"file size must be less then 10 mb\");\r\n    }\r\n    else{\r\n      if(fileType === \"video\"){\r\n        // const uploadTask = storage.ref(`images/${file.name}`).put(file);\r\n      }\r\n      else if(fileType === \"image\"){\r\n        // const uploadTask = storage.ref(`images/${file.name}`).put(file);\r\n      }\r\n\r\n    }\r\n\r\n    \r\n    // uploadTask.on(\r\n    //   \"state_changed\",\r\n    //   (snapshot) => {\r\n    //     const progress = Math.round(\r\n    //       (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n    //     );\r\n    //     setProgress(progress);\r\n    //   },\r\n    //   (error) => {\r\n    //     // console.log(error.message);\r\n    //     alert(error.message);\r\n    //   },\r\n    //   () => {\r\n    //     storage\r\n    //       .ref(\"images\")\r\n    //       .child(file.name)\r\n    //       .getDownloadURL()\r\n    //       .then((url) => {\r\n    //         db.collection(\"photos\").add({\r\n    //           timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    //           caption: caption,\r\n    //           username: user.user.displayName,\r\n    //           user_uid: user_uid,\r\n    //           fileUrl: url,\r\n    //           liked: [],\r\n              \r\n    //         });\r\n    //         setCaption(\"\");\r\n    //         setFile(null);\r\n    //         setProgress(0);\r\n    //         setShow(\"myPosts\");\r\n\r\n    //         // history.push(`/profile/${uid}`);\r\n    //         // window.location.reload();\r\n    //       });\r\n    //   }\r\n    // );\r\n  };\r\n\r\n  const FileHandleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"uploadPost\">\r\n      {progress ? (\r\n        <progress\r\n          id=\"file\"\r\n          value={progress}\r\n          max=\"100\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      ) : null}\r\n\r\n      <div style={{ display: \"flex\" }}>\r\n        <img src={upload} alt=\"profile Picture\" style={{ width: \"200px\" }} />\r\n        {user.user.uid === profile_uid ? (\r\n          <form className=\"upload__form\" onSubmit={UploadPost}>\r\n            <Input\r\n              type=\"text\"\r\n              onChange={(e) => setCaption(e.target.value)}\r\n              value={caption}\r\n              placeholder=\"Give Caption For Image\"\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              onChange={FileHandleChange}\r\n              accept=\".png, .jpg, .jpeg, .gif,.mov,.mp4\"\r\n              // value={file}\r\n              style={{ marginTop: \"10px\", marginBottom: \"10pxf\" }}\r\n            />\r\n            <Button type=\"submit\" disabled={!file} variant=\"contained\" style={{marginTop:'10px',marginBottom:'10px'}} >\r\n              Upload Image\r\n            </Button>\r\n            {error ? (\r\n              <p\r\n                style={{ color: \"red\", fontSize: \"15px\" }}\r\n              >\r\n                {error}\r\n              </p>\r\n            ) : null}\r\n          </form>\r\n        ) : (\r\n          <h3>You can not post at this profile</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPost;\r\n"]},"metadata":{},"sourceType":"module"}