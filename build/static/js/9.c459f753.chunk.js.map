{"version":3,"sources":["../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","components/chat/ChatHeader.js","components/chat/ChatShow.js","components/chat/ChatMessage.js","components/chat/ChatMessageHeader.js","components/chat/Person.js","components/chat/ChatPerson.js","images/chat.gif","pages/ChatWith.js"],"names":["Skeleton","React","props","ref","_props$animation","animation","classes","className","_props$component","component","Component","height","_props$variant","variant","width","other","_objectWithoutProperties","hasChildren","Boolean","children","_extends","clsx","root","withChildren","fitContent","heightAuto","style","withStyles","theme","display","backgroundColor","fade","palette","text","primary","type","marginTop","marginBottom","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","opacity","wave","position","overflow","background","concat","action","hover","bottom","left","right","top","visibility","maxWidth","name","ChatHeader","ChatShow","chat","activeUser","justifyContent","message_sender_uid","userId","senderpic","Avatar","src","border","marginLeft","message_sender","fontSize","color","timeStamp","toDate","toDateString","padding","message","ChatMessage","friendUser","user_uid","useState","setText","setChat","isChatFriend","setIsChatFriend","handleOnEnter","a","firebase","firestore","collection","doc","chatUrl","add","username","FieldValue","serverTimestamp","profile_photo","chat_id","messageUrl","messageUrlOne","docId","update","chat_friends","window","location","reload","useEffect","chatId","orderBy","response","onSnapshot","snapshot","docs","map","id","data","includes","getThisUserChat","objectFit","value","onChange","cleanOnEnter","onEnter","placeholder","Button","onClick","disabled","trim","ChatMessageHeader","profile","setProfile","profileUser","profileuser","getProfileUser","textShadow","Person","friend","ProfileUser","setProfileUser","alignItems","borderBottom","cursor","to","textDecoration","ChatPerson","ChatWith","href","split","user","useContext","Usercontext","setActiveUser","setFriendUser","findActiveUser","uid","currentUser","proUser","getAllInformation","displayName","scroll","textAlign"],"mappings":"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","file":"static/js/9.c459f753.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import { Avatar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./chatHeader.css\";\r\n\r\nfunction ChatHeader({ user, activeUser }) {\r\n  return (\r\n    <div className=\"chatHeader\">\r\n      <div className=\"chatHeader__left\">\r\n        <Avatar className=\"chatHeader__avatar\" src={activeUser.profile_photo} />\r\n        <h4\r\n          style={{\r\n            marginLeft: \"10px\",\r\n            color: \"#42c99c\",\r\n            textShadow: \"2px 2px 1px green\",\r\n          }}\r\n        >\r\n          {user.user.displayName}\r\n        </h4>\r\n      </div>\r\n      <div className=\"chatHeader__right\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHeader;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./chatShow.css\";\r\n\r\nfunction ChatShow({ chat, activeUser }) {\r\n  // console.log(\"chat\", activeUser);\r\n  // console.log(chat);\r\n  return chat && activeUser ? (\r\n    // {chat.message_sender_uid === activeUser}\r\n    <div\r\n      className=\"chatShow\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {chat.message_sender_uid === activeUser.userId ? <div></div> : null}\r\n      <div>\r\n        <div style={{ display: \"flex\" }} className=\"chatShowOk\">\r\n          {chat.senderpic !== \"\" ? (\r\n            <Avatar\r\n              src={chat.senderpic}\r\n              className=\"senderPic\"\r\n              style={\r\n                chat.message_sender_uid === activeUser.userId\r\n                  ? { border: \"2px solid green\" }\r\n                  : { border: \"2px solid red\" }\r\n              }\r\n            />\r\n          ) : (\r\n            <Avatar className=\"senderPic\" />\r\n          )}\r\n          <h6\r\n            style={{\r\n              display: \"relative\",\r\n              marginTop: \"10px\",\r\n              marginLeft: \"5px\",\r\n            }}\r\n          >\r\n            {chat.message_sender}\r\n            <span style={{ fontSize: \"7px\", color: \"gray\", marginLeft: \"5px\" }}>\r\n              {\" \"}\r\n              {chat.timeStamp ? chat.timeStamp.toDate().toDateString() : null}\r\n            </span>\r\n          </h6>\r\n        </div>\r\n        {/* <p>{chat.timeStamp}</p> */}\r\n        <div\r\n          className=\"chatShow__message\"\r\n          style={\r\n            chat.message_sender_uid === activeUser.userId\r\n              ? { backgroundColor: \"#ffa680\" }\r\n              : { backgroundColor: \"#9afcb1\" }\r\n          }\r\n        >\r\n          <p style={{ padding: \"10px\" }}>{chat.message}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default ChatShow;\r\n","import { Button, Container } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport \"./chatMessage.css\";\r\nimport firebase from \"firebase\";\r\nimport ChatShow from \"./ChatShow\";\r\nimport { profileUser } from \"../../services/firebase\";\r\n\r\nfunction ChatMessage({ activeUser, friendUser, user_uid }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [chat, setChat] = useState(null);\r\n  const [isChatFriend, setIsChatFriend] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getThisUserChat(chatId) {\r\n      // console.log(postId);\r\n      const response = await firebase\r\n        .firestore()\r\n        .collection(\"chat\")\r\n        .doc(\"allchatCollection\")\r\n        .collection(chatId).orderBy('timeStamp','desc')\r\n\r\n   \r\n\r\n      await response.onSnapshot((snapshot) => {\r\n        setChat(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n    }\r\n\r\n    if (user_uid && activeUser && friendUser) {\r\n      if (activeUser.chat_friends.includes(user_uid)) {\r\n        getThisUserChat(activeUser.chatUrl[user_uid]);\r\n        setIsChatFriend(true);\r\n      }\r\n    }\r\n  }, [user_uid, isChatFriend]);\r\n\r\n  async function handleOnEnter() {\r\n    // console.log(text);\r\n\r\n    if (isChatFriend) {\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"chat\")\r\n        .doc(\"allchatCollection\")\r\n        .collection(activeUser.chatUrl[user_uid])\r\n\r\n        .add({\r\n          message_sender: activeUser.username,\r\n          message: text,\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          message_sender_uid: activeUser.userId,\r\n          senderpic: activeUser.profile_photo,\r\n        });\r\n    } else {\r\n      let chat_id = activeUser.userId + friendUser.userId;\r\n      let messageUrl = activeUser.chatUrl;\r\n      messageUrl[user_uid] = chat_id;\r\n\r\n      let messageUrlOne = friendUser.chatUrl;\r\n      messageUrlOne[activeUser.userId] = chat_id;\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(activeUser.docId)\r\n        .update({\r\n          chat_friends: [...activeUser.chat_friends, user_uid],\r\n        });\r\n\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(activeUser.docId)\r\n        .update({\r\n          chatUrl: messageUrl,\r\n        });\r\n\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(friendUser.docId)\r\n        .update({\r\n          chat_friends: [...friendUser.chat_friends, activeUser.userId],\r\n        });\r\n\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(friendUser.docId)\r\n        .update({\r\n          chatUrl: messageUrlOne,\r\n        });\r\n\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"chat\")\r\n        .doc(\"allchatCollection\")\r\n        .collection(chat_id)\r\n\r\n        .add({\r\n          message_sender: activeUser.username,\r\n          message: text,\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          message_sender_uid: activeUser.userId,\r\n          senderpic: activeUser.profile_photo,\r\n        });\r\n      setIsChatFriend(true);\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  \r\n  return activeUser && friendUser ? (\r\n    <div className=\"chatMessage\" style={{overflow:'scroll',height:'70vh'}}>\r\n      {chat\r\n        ? chat.map((chat) => (\r\n            <ChatShow chat={chat.data} key={chat.id} activeUser={activeUser} />\r\n          ))\r\n        : null}\r\n\r\n      <div\r\n        className=\"chatMessageInput\"\r\n        style={{\r\n          display: \"flex\",\r\n          // marginTop: \"auto\",\r\n          position: \"absolute\",\r\n          bottom: -5,\r\n          width: \"67%\",\r\n          objectFit: \"contain\",\r\n          backgroundColor: \"#f5f4f2\",\r\n        }}\r\n      >\r\n        <InputEmoji\r\n          value={text}\r\n          onChange={setText}\r\n          cleanOnEnter\r\n          onEnter={handleOnEnter}\r\n          placeholder=\"Type a message\"\r\n        />\r\n        <Button onClick={handleOnEnter} disabled={!text.trim()}>\r\n          {\" \"}\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h5>Loading</h5>\r\n  );\r\n}\r\n\r\nexport default ChatMessage;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./chatMessageHeader.css\";\r\nimport { profileUser } from \"../../services/firebase\";\r\n\r\nfunction ChatMessageHeader({ user_uid, activeUser }) {\r\n  const [profile, setProfile] = useState(null);\r\n  // console.log(user_uid);\r\n\r\n  useEffect(() => {\r\n    async function getProfileUser() {\r\n      const profileuser = await profileUser(user_uid);\r\n\r\n      // console.log(profileuser);\r\n      setProfile(profileuser);\r\n    }\r\n    // console.log(\"userid\", userId);\r\n    if (user_uid !== \"home\") {\r\n      getProfileUser();\r\n    }\r\n  }, [user_uid]);\r\n  // console.log(profile);\r\n  // console.log(\"useruid\", user_uid);\r\n\r\n  return (\r\n    <div className=\"chatMessageHeader\">\r\n      {profile ? (\r\n        <div className=\"chatMessageHeader__left\">\r\n          {profile[0].profile_photo ? (\r\n            <Avatar\r\n              className=\"chatMessageHeader__avatar\"\r\n              src={profile[0].profile_photo}\r\n              style={{ border: \"2px solid gray\" }}\r\n            />\r\n          ) : (\r\n            <Avatar className=\"chatMessageHeader__avatar\" />\r\n          )}\r\n\r\n          <h3 style={{ marginLeft: \"10px\", textShadow: \"2px 2px 5px red\" }}>\r\n            {profile[0].username}\r\n          </h3>\r\n        </div>\r\n      ) : (\r\n        <div className=\"chatMessageHeader__left\">\r\n          <Skeleton variant=\"circle\" width={40} height={40} />\r\n          <Skeleton variant=\"text\" width={30} height={50} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatMessageHeader;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { profileUser } from \"../../services/firebase\";\r\n\r\nfunction Person({ friend, user_uid }) {\r\n  const [ProfileUser, setProfileUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getProfileUser() {\r\n      const profileuser = await profileUser(friend);\r\n\r\n      setProfileUser(profileuser);\r\n    }\r\n\r\n    if (friend) {\r\n      getProfileUser();\r\n    }\r\n  }, [user_uid]);\r\n\r\n  return ProfileUser ? (\r\n    <div\r\n      className=\"chatPerson__person\"\r\n      style={\r\n        user_uid === ProfileUser[0].userId\r\n          ? {\r\n              padding: \"10px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              borderBottom: \"1px solid gray\",\r\n              objectFit: \"contain\",\r\n              cursor: \"pointer\",\r\n              backgroundColor: \"azure\",\r\n            }\r\n          : {\r\n              padding: \"10px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              borderBottom: \"1px solid gray\",\r\n              objectFit: \"contain\",\r\n              cursor: \"pointer\",\r\n            }\r\n      }\r\n      key={friend.userId}\r\n    >\r\n      {ProfileUser[0].profile_photo ? (\r\n        <Avatar\r\n          src={ProfileUser[0].profile_photo}\r\n          style={{ border: \"1px solid green\" }}\r\n        />\r\n      ) : (\r\n        <Avatar style={{ border: \"1px solid green\" }} />\r\n      )}\r\n      <Link\r\n        to={`/chat/${ProfileUser[0].userId}`}\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        <p style={{ marginLeft: \"10px\" }}>{ProfileUser[0].username}</p>\r\n      </Link>\r\n      <Link\r\n        to={`/profile/${ProfileUser[0].userId}`}\r\n        style={{ marginLeft: \"auto\", textDecoration: \"none\" }}\r\n      >\r\n        profile\r\n      </Link>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default Person;\r\n","import { Avatar, Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Person from \"./Person\";\r\n\r\n// left bottom\r\n\r\nfunction ChatPerson({ user, activeUser }) {\r\n  return (\r\n    <div\r\n      className=\"chatPerson\"\r\n      style={{ overflow: \"scroll\", height: \"79vh\", scroll: \"hidden\" }}\r\n    >\r\n      {activeUser && user\r\n        ? activeUser.chat_friends.map((friend) => <Person friend={friend} key={friend}/>)\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\nexport default ChatPerson;\r\n","export default __webpack_public_path__ + \"static/media/chat.386553c3.gif\";","import React, { useContext, useState, useEffect } from \"react\";\r\nimport ChatHeader from \"../components/chat/ChatHeader\";\r\nimport ChatMessage from \"../components/chat/ChatMessage\";\r\nimport ChatMessageHeader from \"../components/chat/ChatMessageHeader\";\r\nimport ChatPerson from \"../components/chat/ChatPerson\";\r\nimport \"./chat.css\";\r\nimport chat from \"../images/chat.gif\";\r\nimport Usercontext from \"../context/user\";\r\nimport { findActiveUser, profileUser } from \"../services/firebase\";\r\nimport firebase from \"firebase\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Person from \"../components/chat/Person\";\r\n\r\nfunction ChatWith() {\r\n  const user_uid = window.location.href.split(\"/chat/\")[1];\r\n  const user = useContext(Usercontext);\r\n  const [activeUser, setActiveUser] = useState(null);\r\n  const [friendUser, setFriendUser] = useState(null);\r\n\r\n  const [chatId, setChatId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getAllInformation() {\r\n      let currentUser = await findActiveUser(user.user.uid);\r\n      setActiveUser(currentUser[0]);\r\n      if (user_uid !== \"home\") {\r\n        let proUser = await profileUser(user_uid);\r\n        setFriendUser(proUser[0]);\r\n      } else {\r\n        setFriendUser(null);\r\n      }\r\n    }\r\n\r\n    if (user.user) {\r\n      getAllInformation();\r\n    }\r\n  }, [user_uid]);\r\n\r\n\r\n\r\n  return user && activeUser ? (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__left\">\r\n        <div className=\"chatHeader\">\r\n          <div className=\"chatHeader__left\">\r\n            <Avatar\r\n              className=\"chatHeader__avatar\"\r\n              src={activeUser.profile_photo}\r\n            />\r\n            <h4\r\n              style={{\r\n                marginLeft: \"10px\",\r\n                color: \"#42c99c\",\r\n                textShadow: \"2px 2px 1px green\",\r\n              }}\r\n            >\r\n              {user.user.displayName}\r\n            </h4>\r\n          </div>\r\n          <div className=\"chatHeader__right\"></div>\r\n        </div>\r\n        <div\r\n          className=\"chatPerson\"\r\n          style={{ overflow: \"scroll\", height: \"79vh\", scroll: \"hidden\" }}\r\n        >\r\n          {activeUser && user\r\n            ? activeUser.chat_friends.map((friend) => (\r\n                <Person friend={friend} key={friend} />\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n      {user_uid === \"home\"  ? (\r\n        <div className=\"chat__right\">\r\n          <h3 style={{ textAlign: \"center\", color: \"#7a7258\" }}>\r\n            {\" \"}\r\n            You are free to chat🚀😄\r\n          </h3>\r\n          <img src={chat} className=\"chat_image\" />\r\n        </div>\r\n      ) : activeUser && friendUser ? (\r\n        <div className=\"chat__right\">\r\n          <ChatMessageHeader user_uid={user_uid} />\r\n          <ChatMessage\r\n            user_uid={user_uid}\r\n            activeUser={activeUser}\r\n            friendUser={friendUser}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <h5 style={{ textAlign: \"centers\" }}>Login For access this page </h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWith;\r\n"],"sourceRoot":""}